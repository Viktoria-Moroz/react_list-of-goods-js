{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReverse","setIsReverse","sortGoods","goods","preparedGoods","sort","a","b","localeCompare","good1","good2","length","reverse","getPreparedGoods","className","onClick","type","cn","prevIsReverse","style","marginRight","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SAyBnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA1BR,SAA0BC,EAA1B,EAAgDH,GAAY,IAAzBF,EAAwB,EAAxBA,UAC3BM,EAAa,YAAOD,GAc1B,OAZIL,IAAcJ,GAChBU,EAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG3CT,IAAcH,GAChBS,EAAcC,MAAK,SAACI,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAVnC,YAarBb,GACFM,EAAcQ,UAGZZ,EACKI,EAAcQ,UAGhBR,EAOWS,CAAiBpB,EACjC,CAAEK,aAAaE,GAMjB,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMhB,EAAaL,IAC5BsB,KAAK,SACLF,UAAWG,IAAG,iBACZ,CAAE,WAAYnB,IAAcJ,IAJhC,iCASA,wBACEqB,QAAS,kBAAMhB,EAAaJ,IAC5BqB,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYnB,IAAcH,IAJhC,4BASA,wBACEoB,QA1Bc,WACpBd,GAAa,SAAAiB,GAAa,OAAKA,MA0BzBF,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,YAAajB,IAJnB,qBASCF,GAAaE,EACZ,wBACEe,QAAS,WACPhB,EAAa,IACbE,GAAa,IAGfe,KAAK,SACLF,UAAU,4BAPZ,mBAYE,MAEN,oBAAIK,MAAO,CAAEC,YAAa,QAA1B,SACGlB,EAAUmB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClGvDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.902a842c.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_REVERSE = 'reverse';\n\nfunction getPreparedGoods(goods, { sortField }, isReverse) {\n  const preparedGoods = [...goods];\n\n  if (sortField === SORT_FIELD_ALPHABET) {\n    preparedGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortField === SORT_FIELD_LENGTH) {\n    preparedGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (sortField === SORT_FIELD_REVERSE) {\n    preparedGoods.reverse();\n  }\n\n  if (isReverse) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n\n  const sortGoods = getPreparedGoods(goodsFromServer,\n    { sortField }, isReverse);\n\n  const toggleReverse = () => {\n    setIsReverse(prevIsReverse => !prevIsReverse);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={toggleReverse}\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !isReverse })}\n        >\n          Reverse\n        </button>\n\n        {sortField || isReverse ? (\n          <button\n            onClick={() => {\n              setSortField('');\n              setIsReverse(false);\n            }\n            }\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )\n          : ''}\n      </div>\n      <ul style={{ marginRight: '10px' }}>\n        {sortGoods.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}